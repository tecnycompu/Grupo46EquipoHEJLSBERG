// <auto-generated />
using System;
using ClinicaLitleCats.App.Persistencia;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ClinicaLitleCats.App.Persistencia.Migrations
{
    [DbContext(typeof(AppContext))]
    [Migration("20211015162335_Inicial3")]
    partial class Inicial3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("ClinicaLitleCats.App.Dominio.Historia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Diagnostico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Historias");
                });

            modelBuilder.Entity("ClinicaLitleCats.App.Dominio.PacienteCat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Alias")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("AuxiliarVeterinarioId")
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Edad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Genero")
                        .HasColumnType("int");

                    b.Property<int?>("HistoriaId")
                        .HasColumnType("int");

                    b.Property<int?>("MedicoVeterinarioId")
                        .HasColumnType("int");

                    b.Property<int?>("PropietarioEncargadoId")
                        .HasColumnType("int");

                    b.Property<string>("Raza")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AuxiliarVeterinarioId");

                    b.HasIndex("HistoriaId");

                    b.HasIndex("MedicoVeterinarioId");

                    b.HasIndex("PropietarioEncargadoId");

                    b.ToTable("PacienteCats");
                });

            modelBuilder.Entity("ClinicaLitleCats.App.Dominio.Persona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Celular")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentoIdentidad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Personas");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Persona");
                });

            modelBuilder.Entity("ClinicaLitleCats.App.Dominio.SignoVital", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("FechaHora")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PacienteCatId")
                        .HasColumnType("int");

                    b.Property<int>("Signo")
                        .HasColumnType("int");

                    b.Property<float>("Valor")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("PacienteCatId");

                    b.ToTable("SignosVitales");
                });

            modelBuilder.Entity("ClinicaLitleCats.App.Dominio.Tratamientos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaHoraTratamiento")
                        .HasColumnType("datetime2");

                    b.Property<int?>("HistoriaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HistoriaId");

                    b.ToTable("Tratamiento");
                });

            modelBuilder.Entity("ClinicaLitleCats.App.Dominio.AuxiliarVeterinario", b =>
                {
                    b.HasBaseType("ClinicaLitleCats.App.Dominio.Persona");

                    b.Property<int>("HorasLaborales")
                        .HasColumnType("int");

                    b.Property<string>("TarjetaProfesional")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("AuxiliarVeterinario");
                });

            modelBuilder.Entity("ClinicaLitleCats.App.Dominio.MedicoVeterinario", b =>
                {
                    b.HasBaseType("ClinicaLitleCats.App.Dominio.Persona");

                    b.Property<string>("Especialidad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegistroRethus")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("MedicoVeterinario");
                });

            modelBuilder.Entity("ClinicaLitleCats.App.Dominio.PropietarioEncargado", b =>
                {
                    b.HasBaseType("ClinicaLitleCats.App.Dominio.Persona");

                    b.Property<string>("Ciudad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nexo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ocupacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("PropietarioEncargado");
                });

            modelBuilder.Entity("ClinicaLitleCats.App.Dominio.PacienteCat", b =>
                {
                    b.HasOne("ClinicaLitleCats.App.Dominio.AuxiliarVeterinario", "AuxiliarVeterinario")
                        .WithMany()
                        .HasForeignKey("AuxiliarVeterinarioId");

                    b.HasOne("ClinicaLitleCats.App.Dominio.Historia", "Historia")
                        .WithMany()
                        .HasForeignKey("HistoriaId");

                    b.HasOne("ClinicaLitleCats.App.Dominio.MedicoVeterinario", "MedicoVeterinario")
                        .WithMany()
                        .HasForeignKey("MedicoVeterinarioId");

                    b.HasOne("ClinicaLitleCats.App.Dominio.PropietarioEncargado", "PropietarioEncargado")
                        .WithMany()
                        .HasForeignKey("PropietarioEncargadoId");

                    b.Navigation("AuxiliarVeterinario");

                    b.Navigation("Historia");

                    b.Navigation("MedicoVeterinario");

                    b.Navigation("PropietarioEncargado");
                });

            modelBuilder.Entity("ClinicaLitleCats.App.Dominio.SignoVital", b =>
                {
                    b.HasOne("ClinicaLitleCats.App.Dominio.PacienteCat", null)
                        .WithMany("SignosVitales")
                        .HasForeignKey("PacienteCatId");
                });

            modelBuilder.Entity("ClinicaLitleCats.App.Dominio.Tratamientos", b =>
                {
                    b.HasOne("ClinicaLitleCats.App.Dominio.Historia", null)
                        .WithMany("Tratamiento")
                        .HasForeignKey("HistoriaId");
                });

            modelBuilder.Entity("ClinicaLitleCats.App.Dominio.Historia", b =>
                {
                    b.Navigation("Tratamiento");
                });

            modelBuilder.Entity("ClinicaLitleCats.App.Dominio.PacienteCat", b =>
                {
                    b.Navigation("SignosVitales");
                });
#pragma warning restore 612, 618
        }
    }
}
